'''
Get Data: https://www.imdb.com/interfaces/

Data used: https://drive.google.com/uc?export=download&id=1ifdNj5BSvsnjMceQMtx7imz5PxHmLl9M

Questions to be answered:
1) Import Data and create the tables (only ones we will use afterwards)
2) Implement the sql queries below: 
 a) Find all directors(not including assistant directors etc.) that where born in 1939 and show their names.
 b) Find all Thriller productions (movies, tvseries, etc.) that have the best ratings and at least 1 million reviews. Show titles and rating.
 c) Find 10 longest running tvseries with at least 100.000 reviews. Show titles, their "age" in descending order and if they are still on air.
 d) Find actors (regardless gender) with at least 4 productions that are known for. Calculate thir average rating for the productions that have at least 1.5 million
 reviews. Show their names and avg rating in descending order for those with avg rating bigger than 9.
3) Query optimization with indexes.
...



#1
C:\Program Files\MongoDB\Tools\100\bin> mongoimport -d name_basics -c scores --type json --file name_basics.json --jsonArray
C:\Program Files\MongoDB\Tools\100\bin> mongoimport -d title_basics -c scores --type json --file title_basics.json --jsonArray


#2a 
db.name_basics.find( {birthYear:1939, primaryProfession: "director"}, {primaryName:1, _id:0} )


#2b
db.title_basics.find({genres:"Thriller", numVotes:{$gte:100000}},{primaryTitle:1, _id:0, averageRating:1}).sort({averageRating:-1}).limit(6)


#2c
db.title_basics.update({"endYear":null},{$set:{"endYear":2021}},{multi:true})
db.title_basics.aggregate({$match: {titleType:"tvSeries",numVotes:{$gte:100000}}}, {$project: {_id:0,primaryTitle:1,age: {$subtract: ["$endYear","$startYear"]}}},{$sort:{age:-1}},{$limit:10})


#2d
db.title_basics.aggregate({$unwind:"$genres"},{$match:{startYear:{$gt:1980}, titleType:"movie"}}, {$group:{_id:"$genres",count:{$sum:1},avgRat:{$avg:"$averageRating"}}},{$sort:{count:-1}})


#3
db.title_basics.createIndex({birthYear:1})
db.title_basics.createIndex({startYear:1})
db.title_basics.createIndex({titleType:1})
db.title_basics.createIndex({startYear:1, titleType:1})
